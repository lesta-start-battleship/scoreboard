services:

  jaeger:
    image: jaegertracing/all-in-one:1.6.0
    container_name: jaeger
    restart: always
    env_file:
      - .env
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"

  sb-postgres:
    image: postgres:15-alpine
    container_name: sb-postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - sb-pg:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 5s
      timeout: 3s
      retries: 5

  scoreboard:
    build:
      context: .
    container_name: scoreboard
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      - sb-postgres
      - jaeger
    env_file:
      - .env
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - OTEL_EXPORTER_OTLP_ENDPOINT=grpc://jaeger:4317

  user-worker:
    build:
      context: .
      dockerfile: broker/Dockerfile
    container_name: user-worker
    command: python -m broker.workers.user_worker
    env_file:
      - .env
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - NEW_USER_TOPIC=${NEW_USER_TOPIC}
      - CURRENCY_CHANGE_TOPIC=${CURRENCY_CHANGE_TOPIC}
      - USERNAME_CHANGE_TOPIC=${USERNAME_CHANGE_TOPIC}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - sb-postgres
      - jaeger

  shop-worker:
    build:
      context: .
      dockerfile: broker/Dockerfile
    container_name: shop-worker
    command: python -m broker.workers.shop_worker
    env_file:
      - .env
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - CHEST_OPEN_TOPIC=${CHEST_OPEN_TOPIC}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - sb-postgres
      - jaeger

  guild-worker:
    build:
      context: .
      dockerfile: broker/Dockerfile
    container_name: guild-worker
    command: python -m broker.workers.guild_worker
    env_file:
      - .env
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - GUILD_CREATE_TOPIC=${GUILD_CREATE_TOPIC}
      - GUILD_DELETE_TOPIC=${GUILD_DELETE_TOPIC}
      - GUILD_MEMBER_CHANGE_TOPIC=${GUILD_MEMBER_CHANGE_TOPIC}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - sb-postgres
      - jaeger

  game-worker:
    build:
      context: .
      dockerfile: broker/Dockerfile
    container_name: game-worker
    command: python -m broker.workers.core_worker
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - GUILD_WAR_END_TOPIC=${GUILD_WAR_END_TOPIC}
      - CORE_MATCH_END_TOPIC=${CORE_MATCH_END_TOPIC}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - sb-postgres

volumes:
  sb-pg: