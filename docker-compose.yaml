services:
  sb-kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: sb-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=${KAFKA_NODE_ID}
      - KAFKA_PROCESS_ROLES=${KAFKA_PROCESS_ROLES}
      - KAFKA_CONTROLLER_QUORUM_VOTERS=${KAFKA_CONTROLLER_QUORUM_VOTERS}
      - KAFKA_LISTENERS=${KAFKA_LISTENERS}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_CONTROLLER_LISTENER_NAMES=${KAFKA_CONTROLLER_LISTENER_NAMES}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      - CLUSTER_ID=${CLUSTER_ID}
    volumes:
      - sb-kafka:/tmp/kraft-combined-logs

  sb_pg:
    image: postgres:15-alpine
    restart: always
    container_name: sb_pg
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - sb-pg:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 5s
      timeout: 3s
      retries: 5

  scoreboard:
    build:
      context: .
    container_name: scoreboard
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      - sb-kafka
      - sb_pg
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
volumes:
  sb-kafka:
  sb-pg: